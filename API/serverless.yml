service: serverless-aws-nodejs
provider:
  name: aws #Define the cloud provider to use
  runtime: nodejs12.x 
  stage: dev
  region: sa-east-1
functions:
  app:
    handler: index.server 
    events: #Define the events that trigger the lambda
      - http: #Define an HTTP endpoint that respond to the / route
          path: / 
          method: ANY #Define the HTTP methods to be used (GET/POST)
          cors: true
      - http: #Define an HTTP endpoin that respond to any routes
          path: /{proxy+}
          method: ANY
          cors: true
      - http:
          path: /pruebas
          method: POST
          cors: true
          documentation:
            summary: "Testing purposes, returns the body of the method"
            requestBody:
                description: "Any json file will work"
      - http:
          path: /peticiones
          method: POST
          cors: true
          documentation:
            summary: "Adds a new peticion to the list of existing peticiones"
            requestBody:
                description: "It asks for resources and has the hospital id"
            pathParams:
                -
                    name: x-api-key
                    required: true
                    description: "API Key identifier"
            requestModels:
                "application/json": "peticion"
            methodResponses:
                -
                    statusCode: "200"
                    responseBody:
                            description: "La peticion se agrego correctamente"
                -
                    statusCode: "403"
                    responseBody:
                        descripcion: "Ocurre cuando no se utiliza una clave API-Key o cuando se supera la quota diaria"
      - http:
          path: /peticiones
          method: GET
          cors: true
          documentation:
            summary: "Gets a list of all the existing peticiones"
            requestBody:
                description: "Empty request body"
            pathParams:
                -
                    name: x-api-key
                    required: true
                    description: "API Key identifier"
      - http:
          path: /login
          method: POST
          cors: true
          documentation:
            summary: "Permite logearse a los administradores"
            requestBody:
                description: "Contiene un usuario y el hash de una contrasenia"
            requestModels: 
                "application/json" : "login"
      - http:
          path: /register
          method: POST
          cors: true
      - http:
          path: /centrosHospitalarios
          method: POST
          cors: true
      - http:
          path: /centrosHospitalarios
          method: GET
          cors: true
      - http:
          path: /envios
          method: GET
          cors: true
      - http:
          path: /envios
          method: POST
          cors: true
      - http:
          path: /informes
          method: GET
          cors: true
          documentation:
            summary: "Shows all the informes saved in our database"
          methodResponses:
            -
                statusCode : "200"
                responseBody:
                    description: "Every informe saved"
            -
                statusCode: "403"
                responseBody:
                    descripcion: "Cuando se supera la cuota diaria"

        -http:
            path: /informes
            method: POST
            cors: true
            documentation:
                summary: "Adds a new informe to our database"
            requestBody:
                description: "It has basic hospital info, number of cases, deaths,tests, and resources of the hospital"
            requestModels:
                "application/json" : "informe"
            methodResponses:
                -
                    statusCode : "200"
                    responseBody:
                        description: "Informe guardado correctamente"
                -
                    statusCode: "403"
                    responseBody:
                        descripcion: "Cuando se supera la cuota diaria"
custom:
    documentation:
        version: '1.5'
        summary: 'API FAKE del Ministerio de Salud del Chaco'
        description: 'API para recibir peticiones y para manejo interno del grupo ministerio de salud. Esto es un trabajo practico de la universidad, no es una api real de ministerio.'
        resources: 
            -
                path: "peticiones"
                description: "Path used to see peticiones and add more"
        models:
            -
                name: login
                contentType: "application/json"
                schema:
                    type: object
                    properties:
                        user:
                            type: string
                        phash:
                            type: string    
            -
                name: doctor
                contentType: "application/json"
                schema:
                    type: object
                    properties: 
                        cantidad:
                            type: number
                        especialidad: 
                            type: string
            -
                name: envio
                contentType: "application/json"
                schema:
                    type: object
                    properties:
                        Envio:
                            type: object
                            properties:
                                idCentro:
                                    type: number
                                idPeticion:
                                    type: number
                                camillas: 
                                    type: number
                                jabonLitros:
                                    type: number
                                alcoholLitros: 
                                    type: number
                                barbijos:
                                    type: number
                                jeringas:
                                    type: number
                                cofias:
                                    type: number
                                medicos:
                                    type: array
                                    items:
                                        $ref: "{{model:doctor}}"
            -
                name: peticion
                contentType: "application/json"
                schema:
                    type: object
                    properties:
                        Peticion:
                            type: object
                            required:
                            - "idCentro"    
                            properties:
                                idCentro:
                                    type: number
                                camillas: 
                                    type: number
                                jabonLitros:
                                    type: number
                                alcoholLitros: 
                                    type: number
                                barbijos:
                                    type: number
                                jeringas:
                                    type: number
                                cofias:
                                    type: number
                                medicos:
                                    type: array
                                    items:
                                        $ref: "{{model:doctor}}"
                                respondidaCompletamente:
                                    type: boolean
                                rechazada: 
                                    type: boolean                                     
            -
                name: ciudad
                contentType: "application/json"
                schema:
                    type: object
                    properties:
                        ciudad:
                            type: string
                        poblacion: 
                            type: number
                        cantidades:
                            type: object
                            properties:
                                sospecha:
                                    type: number
                                enfermos:
                                    type: number
                                recuperados:
                                    type: number
                                muertos:
                                    type: number
            -
                name: estadisticas
                contentType: "application/json"
                schema:
                    type: object
                    properties: 
                        data_ciudades: 
                            type: array
                            items:
                                $ref: "{{model:ciudad}}"
                        totales:
                            type: object
                            properties:
                                poblacionTotal:
                                    type: number
                                sospecha:
                                    type: number
                                enfermos: 
                                    type: number
                                recuperados:
                                    type: number
                                muertos:
                                    type: number
            -
                name: informe
                contentType: "application/json"
                schema:
                    type: object
                    properties:
                        cuitHospital:
                            type: number
                        nombreHospital:
                            type: string
                        idCiudad:
                            type: number
                        nombreCiudad:
                            type: string
                        resumenCasos:
                            type: object
                            properties:
                                cantidadMuertos:
                                    type: number
                                cantidadCurados:
                                    type: number
                                cantidadEnfermos:
                                    type: number
                        pruebasRealizadas:
                            type: object
                            properties:
                                realizadas:
                                    type: number
                                sinResultado:
                                    type: number
                                positivas:
                                    type: number
                                negativas:
                                    type: number
                        Recursos:
                            type: object
                            properties:
                                camillasDisponibles:
                                    type: number
                                camillasOcupadas:
                                    type: number
                                jabonLitros:
                                    type: number
                                alcoholLitros:
                                    type: number
                                barbijos:
                                    type: number
                                jeringas:
                                    type: number
                                cofias:
                                    type: number
                                medicos:
                                    type: array
                                    items:
                                        $ref: "{{model:doctor}}"
                                



plugins:
  - serverless-aws-documentation 