{
  "swagger" : "2.0",
  "info" : {
    "version" : "2020-07-07T18:39:04Z",
    "title" : "dev-serverless-aws-nodejs"
  },
  "host" : "6iubewzdng.execute-api.sa-east-1.amazonaws.com",
  "basePath" : "/dev",
  "schemes" : [ "https" ],
  "paths" : {
    "/" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      },
      "x-amazon-apigateway-any-method" : {
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      }
    },
    "/actualizarEstadisticas" : {
      "get" : {
        "summary" : "Chequea si hay nuevos informes, si los hay, toma la informacion, crea una nueva estadistica parcial y suma a la total",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/centroHospitalarioId" : {
      "get" : {
        "summary" : "Gets a Centros Hospitalario",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCentro",
          "in" : "query",
          "description" : "Id of Centro Hospitalario",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/centrosHospitalarios"
            }
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/centrosHospitalarios" : {
      "get" : {
        "summary" : "Gets a list of all the existing Centros Hospitalarios",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/centrosHospitalarios"
            }
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "summary" : "Adds a Centro Hospitalario to the list of existing Centros Hospitalarios",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "centrosHospitalarios",
          "description" : "It asks for a new Centro Hospitalario",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/centrosHospitalarios"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/ciudad" : {
      "get" : {
        "summary" : "Muestra las ciudades",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "summary" : "Agrega una ciudad",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/encontrarPeticion" : {
      "get" : {
        "summary" : "Allows to find a peticion by its mongo id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idPeticion",
          "in" : "query",
          "description" : "Mongo ID for the peticion object",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/peticion"
            }
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/envioId" : {
      "get" : {
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idEnvio",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/envio"
            }
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/envios" : {
      "get" : {
        "summary" : "Gets a list of all the existing Envios",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/envio"
            }
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "summary" : "Adds a Envio to the list of existing Envios",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "envio",
          "description" : "It asks for a new Envio",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/envio"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/generarMedicos" : {
      "post" : {
        "summary" : "Genera nuevos medicos de forma aleatoria",
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/generarRecursos" : {
      "post" : {
        "summary" : "Genera nuevos recursos de forma aleatoria",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "recurso",
          "description" : "Empty",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/recurso"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/informes" : {
      "get" : {
        "summary" : "Devuelve todos los informes",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "summary" : "Añade un nuevo informe",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/login" : {
      "post" : {
        "summary" : "Permite logearse a los administradores",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "login",
          "description" : "Contiene un usuario y el hash de una contrasenia",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/login"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/medicos" : {
      "get" : {
        "summary" : "Gets a list of all the existing Medicos",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/listamedicos"
            }
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "summary" : "Adds a Envio to the list of existing Medicos",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "listamedicos",
          "description" : "It asks for a new Medico",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/listamedicos"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/obtenerDatos" : {
      "post" : {
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/peticiones" : {
      "get" : {
        "summary" : "Gets a list of all the existing peticiones",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-api-key",
          "in" : "path",
          "description" : "API Key identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/peticion"
            }
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "summary" : "Metodo para uso de CENTROS HOSPITALARIOS. Adds a new peticion to the list of existing peticiones",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-api-key",
          "in" : "path",
          "description" : "API Key identifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "peticion",
          "description" : "It asks for resources and has the hospital id. If you dont want a resource, dont add it to the body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/peticion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/pruebas" : {
      "post" : {
        "summary" : "Testing purposes, returns the body of the method",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/rechazarPeticion" : {
      "get" : {
        "summary" : "Gets a peticion of all the existing by id",
        "parameters" : [ {
          "name" : "idPeticion",
          "in" : "query",
          "description" : "ID of peticion",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/recursos" : {
      "get" : {
        "summary" : "Gets a list of all the existing Recursos",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/recurso"
            }
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "summary" : "Allows first load of recursos",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "recurso",
          "description" : "Document with all the resources and the quantity of those",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/recurso"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/register" : {
      "post" : {
        "summary" : "Adds a new admin to the list of existing admins",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "login",
          "description" : "It asks for a new admin and hash",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/login"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response"
          },
          "403" : {
            "description" : "403 response"
          }
        },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/stat" : {
      "get" : {
        "summary" : "Metodo para PACIENTES. Devuelve todas las estadisticas almacenadas",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "summary" : "Agrega un nuevo modelo de estadisticas -se ejecuta una sola vez",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/validarSesion" : {
      "get" : {
        "summary" : "Valida la sesion de un usuario ",
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/{proxy+}" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,DELETE,GET,HEAD,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "passthroughBehavior" : "when_no_match",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      },
      "x-amazon-apigateway-any-method" : {
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:768095478863:function:serverless-aws-nodejs-dev-app/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      }
    }
  },
  "definitions" : {
    "envio" : {
      "type" : "object",
      "properties" : {
        "Envio" : {
          "type" : "object",
          "properties" : {
            "idCentro" : {
              "type" : "number"
            },
            "alcoholLitros" : {
              "type" : "number"
            },
            "camillas" : {
              "type" : "number"
            },
            "jeringas" : {
              "type" : "number"
            },
            "medicos" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/medico"
              }
            },
            "barbijos" : {
              "type" : "number"
            },
            "cofias" : {
              "type" : "number"
            },
            "idPeticion" : {
              "type" : "number"
            },
            "jabonLitros" : {
              "type" : "number"
            }
          }
        }
      }
    },
    "recurso" : {
      "type" : "object",
      "properties" : {
        "alcoholLitrosDisponible" : {
          "type" : "number"
        },
        "barbijosDisponible" : {
          "type" : "number"
        },
        "cofiasDisponible" : {
          "type" : "number"
        },
        "jabonLitrosDisponible" : {
          "type" : "number"
        },
        "camillasDisponible" : {
          "type" : "number"
        },
        "jeringasDisponible" : {
          "type" : "number"
        }
      }
    },
    "Empty" : { },
    "listamedicos" : {
      "type" : "object",
      "properties" : {
        "Medicos" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/medico"
          }
        }
      }
    },
    "medico" : {
      "type" : "object",
      "properties" : {
        "cantidad" : {
          "type" : "number"
        },
        "especialidad" : {
          "type" : "string"
        }
      }
    },
    "centrosHospitalarios" : {
      "type" : "object",
      "properties" : {
        "idCentro" : {
          "type" : "number"
        },
        "ciudad" : {
          "type" : "string"
        },
        "direccion" : {
          "type" : "string"
        },
        "nombre" : {
          "type" : "string"
        },
        "idCiudad" : {
          "type" : "number"
        }
      }
    },
    "login" : {
      "type" : "object",
      "properties" : {
        "phash" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string"
        }
      }
    },
    "peticion" : {
      "type" : "object",
      "properties" : {
        "createdAt" : {
          "type" : "string"
        },
        "Peticion" : {
          "type" : "object",
          "properties" : {
            "idCentro" : {
              "type" : "number"
            },
            "alcoholLitros" : {
              "type" : "number"
            },
            "camillas" : {
              "type" : "number"
            },
            "jeringas" : {
              "type" : "number"
            },
            "medicos" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/medico"
              }
            },
            "barbijos" : {
              "type" : "number"
            },
            "cofias" : {
              "type" : "number"
            },
            "respondidaCompletamente" : {
              "type" : "boolean"
            },
            "rechazada" : {
              "type" : "boolean"
            },
            "jabonLitros" : {
              "type" : "number"
            }
          },
          "required" : [ "idCentro" ]
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    }
  },
  "x-amazon-apigateway-documentation" : {
    "version" : "2.1",
    "createdDate" : "2020-07-06T03:00:40Z",
    "documentationParts" : [ {
      "location" : {
        "type" : "METHOD",
        "path" : "/actualizarEstadisticas",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Chequea si hay nuevos informes, si los hay, toma la informacion, crea una nueva estadistica parcial y suma a la total"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/centroHospitalarioId",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Gets a Centros Hospitalario"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/centrosHospitalarios",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Gets a list of all the existing Centros Hospitalarios"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/centrosHospitalarios",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Adds a Centro Hospitalario to the list of existing Centros Hospitalarios"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/ciudad",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Muestra las ciudades"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/ciudad",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Agrega una ciudad"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/encontrarPeticion",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Allows to find a peticion by its mongo id"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/envios",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Gets a list of all the existing Envios"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/envios",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Adds a Envio to the list of existing Envios"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/generarMedicos",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Genera nuevos medicos de forma aleatoria"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/generarRecursos",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Genera nuevos recursos de forma aleatoria"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/informes",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Devuelve todos los informes"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/informes",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Añade un nuevo informe"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/login",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Permite logearse a los administradores"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/medicos",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Gets a list of all the existing Medicos"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/medicos",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Adds a Envio to the list of existing Medicos"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/peticiones",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Gets a list of all the existing peticiones"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/peticiones",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Metodo para uso de CENTROS HOSPITALARIOS. Adds a new peticion to the list of existing peticiones"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/pruebas",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Testing purposes, returns the body of the method"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/rechazarPeticion",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Gets a peticion of all the existing by id"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/recursos",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Gets a list of all the existing Recursos"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/recursos",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Allows first load of recursos"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/register",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Adds a new admin to the list of existing admins"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/stat",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Metodo para PACIENTES. Devuelve todas las estadisticas almacenadas"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/stat",
        "method" : "POST"
      },
      "properties" : {
        "summary" : "Agrega un nuevo modelo de estadisticas -se ejecuta una sola vez"
      }
    }, {
      "location" : {
        "type" : "METHOD",
        "path" : "/validarSesion",
        "method" : "GET"
      },
      "properties" : {
        "summary" : "Valida la sesion de un usuario "
      }
    }, {
      "location" : {
        "type" : "PATH_PARAMETER",
        "path" : "/peticiones",
        "method" : "GET",
        "name" : "x-api-key"
      },
      "properties" : {
        "description" : "API Key identifier"
      }
    }, {
      "location" : {
        "type" : "PATH_PARAMETER",
        "path" : "/peticiones",
        "method" : "POST",
        "name" : "x-api-key"
      },
      "properties" : {
        "description" : "API Key identifier"
      }
    }, {
      "location" : {
        "type" : "QUERY_PARAMETER",
        "path" : "/centroHospitalarioId",
        "method" : "GET",
        "name" : "idCentro"
      },
      "properties" : {
        "description" : "Id of Centro Hospitalario"
      }
    }, {
      "location" : {
        "type" : "QUERY_PARAMETER",
        "path" : "/encontrarPeticion",
        "method" : "GET",
        "name" : "idPeticion"
      },
      "properties" : {
        "description" : "Mongo ID for the peticion object"
      }
    }, {
      "location" : {
        "type" : "QUERY_PARAMETER",
        "path" : "/rechazarPeticion",
        "method" : "GET",
        "name" : "idPeticion"
      },
      "properties" : {
        "description" : "ID of peticion"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/centroHospitalarioId",
        "method" : "GET"
      },
      "properties" : {
        "description" : "Empty request body"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/centrosHospitalarios",
        "method" : "GET"
      },
      "properties" : {
        "description" : "Empty request body"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/centrosHospitalarios",
        "method" : "POST"
      },
      "properties" : {
        "description" : "It asks for a new Centro Hospitalario"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/envios",
        "method" : "GET"
      },
      "properties" : {
        "description" : "Empty request body"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/envios",
        "method" : "POST"
      },
      "properties" : {
        "description" : "It asks for a new Envio"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/generarMedicos",
        "method" : "POST"
      },
      "properties" : {
        "description" : "None"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/generarRecursos",
        "method" : "POST"
      },
      "properties" : {
        "description" : "Empty"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/login",
        "method" : "POST"
      },
      "properties" : {
        "description" : "Contiene un usuario y el hash de una contrasenia"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/medicos",
        "method" : "GET"
      },
      "properties" : {
        "description" : "Empty request body"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/medicos",
        "method" : "POST"
      },
      "properties" : {
        "description" : "It asks for a new Medico"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/peticiones",
        "method" : "GET"
      },
      "properties" : {
        "description" : "Empty request body"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/peticiones",
        "method" : "POST"
      },
      "properties" : {
        "description" : "It asks for resources and has the hospital id. If you dont want a resource, dont add it to the body"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/pruebas",
        "method" : "POST"
      },
      "properties" : {
        "description" : "Any json file will work"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/rechazarPeticion",
        "method" : "GET"
      },
      "properties" : {
        "description" : "Empty request body"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/recursos",
        "method" : "GET"
      },
      "properties" : {
        "description" : "Empty request body"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/recursos",
        "method" : "POST"
      },
      "properties" : {
        "description" : "Document with all the resources and the quantity of those"
      }
    }, {
      "location" : {
        "type" : "REQUEST_BODY",
        "path" : "/register",
        "method" : "POST"
      },
      "properties" : {
        "description" : "It asks for a new admin and hash"
      }
    }, {
      "location" : {
        "type" : "RESOURCE",
        "path" : "/peticiones"
      },
      "properties" : {
        "description" : "Path used to see peticiones and add more"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/centrosHospitalarios",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "El Centro Hospitalario se agrego correctamente"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/encontrarPeticion",
        "method" : "GET",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "a single peticion"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/encontrarPeticion",
        "method" : "GET",
        "statusCode" : "403"
      },
      "properties" : {
        "description" : "Ocurre cuando se supera la cuota diaria"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/envios",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "El Envio se agrego correctamente"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/generarMedicos",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "Aviso de confirmacion"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/generarRecursos",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "Recursos generados"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/login",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "Login exitoso"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/login",
        "method" : "POST",
        "statusCode" : "403"
      },
      "properties" : {
        "description" : "Ocurre cuando se supera la cuota diaria"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/medicos",
        "method" : "GET",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "Document of every type of medico"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/medicos",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "El Medico se agrego correctamente"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/peticiones",
        "method" : "GET",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "Array of peticiones"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/peticiones",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "La peticion se agrego correctamente"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/rechazarPeticion",
        "method" : "GET",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "Peticion rechazada"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/recursos",
        "method" : "GET",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "Array of recursos"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/recursos",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "Array of recursos"
      }
    }, {
      "location" : {
        "type" : "RESPONSE_BODY",
        "path" : "/register",
        "method" : "POST",
        "statusCode" : "200"
      },
      "properties" : {
        "description" : "El usuario se agrego correctamente"
      }
    } ]
  },
  "x-amazon-apigateway-gateway-responses" : {
    "DEFAULT_4XX" : {
      "responseParameters" : {
        "gatewayresponse.header.Access-Control-Allow-Methods" : "'POST'",
        "gatewayresponse.header.Access-Control-Allow-Origin" : "'*'",
        "gatewayresponse.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      }
    },
    "DEFAULT_5XX" : {
      "responseParameters" : {
        "gatewayresponse.header.Access-Control-Allow-Methods" : "'POST'",
        "gatewayresponse.header.Access-Control-Allow-Origin" : "'*'",
        "gatewayresponse.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      }
    }
  }
}